apply plugin: 'com.android.library'

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
version = "1.0.0" //版本号


android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions { annotationProcessorOptions {
            includeCompileClasspath = true
            arguments = [ moduleName : project.getName() ]
        } }
    }

    dataBinding  {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    //noinspection GradleCompatible
    api 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'

    api 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'
    api 'org.greenrobot:eventbus:3.0.0'
    api 'com.android.support:recyclerview-v7:27.1.1'
    //retrofit2
    api 'com.squareup.retrofit2:converter-gson:2.2.0'
    api 'com.squareup.retrofit2:converter-scalars:2.2.0'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    //OkHttp依赖
    api 'com.squareup.okhttp3:okhttp:3.7.0'
    api 'com.squareup.okhttp3:logging-interceptor:3.7.0'
    api 'com.squareup.okhttp3:okhttp-urlconnection:3.7.0'
    //RxJava依赖
    api 'io.reactivex.rxjava2:rxandroid:2.0.1'
    api 'io.reactivex.rxjava2:rxjava:2.0.9'
    //gson
    api 'com.google.code.gson:gson:2.8.1'
    //SmartRefreshLayout
    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    api 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.5.1'
    //时间
    api 'joda-time:joda-time:2.9.9'
    //butterknife
    api 'com.jakewharton:butterknife:7.0.1'
    //阿里路由
    api 'com.alibaba:arouter-api:1.3.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
    //底部导航
    api 'com.flyco.tablayout:FlycoTabLayout_Lib:2.0.8@aar'
    //glide
    api 'com.github.bumptech.glide:glide:4.0.0'
    //分包
    api 'com.android.support:multidex:1.0.0'



}




def siteUrl = 'https://github.com/yannecer/NCalendar'      // 项目的主页
def gitUrl = 'https://github.com/yannecer/NCalendar.git'   // Git仓库的url
group = "com.necer.basic" // Maven Group ID for the artifact，一般填你唯一的包名,就是这引用时 compile'com.necer.ndialog2 ......'
install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar' //打包类型
               // url siteUrl
                //开源许可
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                // 开发者信息
                developers {
                    developer {
                        id 'necer'
                        name 'yannecer'
                        email '619008099@qq.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}


tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}


//打包javadocjar和sourcejar
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    options.encoding = 'UTF-8'
    source = 'src/main/java'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

// 加载本地配置
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"  //发布到Bintray的哪个仓库里，就是在注册时新建仓库的名字
        name = "Basic"  //在仓库中显示的项目名字
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

